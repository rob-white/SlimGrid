<!DOCTYPE html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=Edge"/>
    <title>SlimGrid Example 12</title>

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Bootstrap themed site -->
    <link href="../css/bootstrap/bootstrap.min.css?v=1.0" rel="stylesheet" type="text/css"/>
    <link href="../css/bootstrap/bootstrap-responsive.min.css?v=1.0" rel="stylesheet" type="text/css"/>

    <!-- CSS required for SlickGrid/SlimGrid -->
    <link href="../css/slickgrid/slick.grid.css?v=1.0" rel="stylesheet" type="text/css"/>
    <link href="../css/jquery/smoothness/jquery-ui-1.10.3.custom.min.css?v=1.0" rel="stylesheet" type="text/css"/>
    <link href="../css/slickgrid/slick.pager.css?v=1.0" rel="stylesheet" type="text/css"/>
    <link href="../css/slickgrid/slick.columnpicker.css?v=1.0" rel="stylesheet" type="text/css"/>
    <link href="../css/slickgrid/slick.headerbuttons.css?v=1.0" rel="stylesheet" type="text/css"/>
    <link href="../css/slickgrid/slick.headermenu.css?v=1.0" rel="stylesheet" type="text/css"/>
    <link href="../css/slickgrid/slick-default-theme.css?v=1.0" rel="stylesheet" type="text/css"/>
    <link href="../css/slickgrid/plugins-common.css?v=1.0" rel="stylesheet" type="text/css"/>

    <style type="text/css">
        /* Push tabs down so they aren't flush with the top*/
        #tab-container {
            margin-top: 80px;
        }

        .totals {
            font-weight: bold;
            color: gray;
            font-style: italic;
        }
    </style>
</head> <!--/head -->

<html lang="en-us">
<body>
<div id="tab-container" class="container-fluid">
    <ul class="nav nav-tabs" id="tabs">
        <li id="example-12-tab">
            <a href="#example-12" data-toggle="tab">Example 12</a>
        </li>
    </ul> <!--/#tabs -->
    <div class="tab-content">
        <div class="tab-pane" id="example-12">
            <div class="row-fluid">
                <div id="example-12-table" class="span7"></div>
                <div class="span5">
                    <h3 class="text-center">Overview</h3>
                    <hr/>
                    <a href="https://github.com/rob-white/SlimGrid/blob/master/SlimGrid/examples/example-12.htm">Source Code on Github</a>
                    <hr/>
                    <ul>
                        <li>Editable Grid with Totals Row</li>
                    </ul>
                </div>
            </div>
        </div> <!--/#example-12 -->
    </div> <!--/.tab-content -->
</div> <!--/.tab-content -->

<!-- jQuery scripts -->
<script src="../js/jquery/jquery-1.9.1.js?v=1.0" type="text/javascript"></script>
<script src="../js/jquery/jquery-ui-1.10.3.custom.min.js?v=1.0" type="text/javascript"></script>
<script src="../js/jquery/jquery.event.drop-2.2.js?v=1.0" type="text/javascript"></script>
<script src="../js/jquery/jquery.event.drag-2.2.js?v=1.0" type="text/javascript"></script>

<!-- Bootstrap scripts -->
<script src="../js/bootstrap/bootstrap.min.js?v=1.0" type="text/javascript"></script>

<!-- Slickgrid scripts -->
<script src="../js/slickgrid/slick.core.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.grid.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.formatters.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.dataview.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.pager.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.groupitemmetadataprovider.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.cellrangedecorator.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.cellrangeselector.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.cellselectionmodel.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.rowselectionmodel.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.columnpicker.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slickgrid.headerfilter.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.cellexternalcopymanager.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.checkboxselectcolumn.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.editors.js?v=1.0" type="text/javascript"></script>

<!-- SlimGrid dependency (will be removed in future update)-->
<script src="../js/underscore/underscore.js?v=1.0" type="text/javascript"></script>

<!-- SlimGrid wrapper for SlickGrid creation -->
<script src="../slim.grid.js?v=1.0" type="text/javascript"></script>

<script type="text/javascript">
    // Example 12
    $(document).ready(function () {
        // When jQuery's ready, initialize the example and show the tab
        var example = Example().init().show();

        $(window).on('resize', function(){
            example.resize();
        });
    });

    function Example() {
        // Reference elements with jQuery
        var $el = {
                    tab: $('#example-12-tab a'),
                    gridContainer: $('#example-12-table')
                },
                gridHeight = 400,	// Set the height we want to use
                grid = SlimGrid();	// Create a base SlimGrid

        // Constructor
        function page() { }

        // ----- Public functions -----
        page.init = function () {

            // Create example data
            var data = generateDummyData();

            // Create a SlimGrid (SlickGrid) with options and formatting
            grid.container($el.gridContainer)	        // The container element of the grid (a jQuery element)
                    .selectionModel(new Slick.CellSelectionModel)
                    .gridOptions({
                        // -- SlickGrid --
                        defaultColumnWidth: 120,
                        forceFitColumns: false,
                        multiSelect: true,
                        editable: true,
                        autoEdit: false,

                        // -- SlimGrid --
                        pk: 'id',                       // Unique key for the data that SlimGrid will reference
                        height: gridHeight,             // The height of the grid
                        autoIncrement: false,           // If we don't have a unique key, SlimGrid will auto-generate one
                        copyOut: true,                  // Allow user to copy out data with ctrl-c
                        downloadable: true,             // Download data (csv) link provided at bottom of grid
                        showColumnPicker: false,        // Column filter plugin added to right-click of column headers
                        showHeaderFilter: false         // Filter plugin added to column headers
                    })
                    .columnOptions(function(key, column){
                        column['editor'] = Slick.Editors.Integer;

                        return column;
                    })
                    .events(function (events){

                        events.afterRender = function(data) {
                            var dataview = this.dataview(),
                                gridview = this.gridview(),
                                columns = this.columns();

                            extendDataView(data, dataview, columns);
                            updateTotalRow(dataview, gridview);
                        };

                        events.onCellChange = function(e, args, cell) {
                            var dataview = this.dataview(),
                                gridview = this.gridview();
                            updateTotalRow(dataview, gridview);
                        };

                        return events;
                    })
                    .render(data);  // Add data to grid and render

            // When this tab is shown to the user,
            // run resize for page elements
            $el.tab.on('shown', function (e) {
                resizePageElements();
            });

            return page;
        };

        // Show the tab if it's not currently selected
        page.show = function () {
            $el.tab.tab('show');
            return page;
        };

        page.resize = function () {
            resizePageElements();
            return page;
        };

        function updateTotalRow(dataview, gridview) {
            // The data has changed - recalculate the totals.
            dataview.updateTotals();
            gridview.invalidateRow(dataview.getLength() - 1);
            gridview.render();
        }

        function extendDataView(data, dataview, columns) {

            var totals = {};
            var totalsMetadata = {
                // Style the totals row differently.
                cssClasses: "totals",
                columns: {}
            };

            // Make the totals not editable.
            for (var i = 0; i < columns.length; i++) {
                totalsMetadata.columns[i] = { editor: null };
            }

            dataview.getLength = function() {
                return data.length + 1;
            };

            dataview.getItem = function(index) {
                return (index < data.length) ? data[index] : totals;
            };

            dataview.updateTotals = function() {
                var columnIdx = columns.length;
                while (columnIdx--) {
                    var columnId = columns[columnIdx].id;
                    var total = 0;
                    var i = data.length;
                    while (i--) {
                        total += (parseInt(data[i][columnId], 10) || 0);
                    }
                    totals[columnId] = "Sum:  " + total;
                }
            };

            dataview.getItemMetadata = function (index) {
                return (index != data.length) ? null : totalsMetadata;
            };
        }

        // ----- Private functions -----
        // Generate some dummy data
        function generateDummyData() {
            var data = [];
            for (var i = 0; i < 10; i++) {
                var row = { 'id': i };
                for (var j = 0; j < 10; j++) {
                    row['column' + j] = i*j;
                }
                data.push(row);
            }

            return data;
        }

        function resizePageElements() {
            // Calls SlickGrid resize
            grid.resize();
        }

        return page;
    }

</script>
</body> <!--/body -->
</html> <!--/html -->
