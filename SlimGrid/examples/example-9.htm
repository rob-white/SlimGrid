<!DOCTYPE html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=Edge"/>
    <title>SlimGrid - Example 9</title>

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Bootstrap themed site -->
    <link href="../css/bootstrap/bootstrap.min.css?v=1.0" rel="stylesheet" type="text/css"/>
    <link href="../css/bootstrap/bootstrap-responsive.min.css?v=1.0" rel="stylesheet" type="text/css"/>

    <!-- CSS required for SlickGrid/SlimGrid -->
    <link href="../css/slickgrid/slick.grid.css?v=1.0" rel="stylesheet" type="text/css"/>
    <link href="../css/jquery/smoothness/jquery-ui-1.10.3.custom.min.css?v=1.0" rel="stylesheet" type="text/css"/>
    <link href="../css/slickgrid/slick.pager.css?v=1.0" rel="stylesheet" type="text/css"/>
    <link href="../css/slickgrid/slick.columnpicker.css?v=1.0" rel="stylesheet" type="text/css"/>
    <link href="../css/slickgrid/slick.headerbuttons.css?v=1.0" rel="stylesheet" type="text/css"/>
    <link href="../css/slickgrid/slick.headermenu.css?v=1.0" rel="stylesheet" type="text/css"/>
    <link href="../css/slickgrid/slick-default-theme.css?v=1.0" rel="stylesheet" type="text/css"/>
    <link href="../css/slickgrid/plugins-common.css?v=1.0" rel="stylesheet" type="text/css"/>

    <style type="text/css">
        /* Push tabs down so they aren't flush with the top */
        #tab-container {
            margin-top: 80px;
        }

        .cell-effort-driven {
            text-align: center;
        }

        .cell-reorder {
            cursor: move;
            background: url("../css/slickgrid/images/drag-handle.png") no-repeat center center;
        }

        .cell-selection {
            border-right-color: silver;
            border-right-style: solid;
            background: #f5f5f5;
            color: gray;
            text-align: right;
            font-size: 10px;
        }

        .slick-row.selected .cell-selection {
            background-color: transparent; /* show default selected row background */
        }

        .recycle-bin {
            width: 200px;
            border: 1px solid gray;
            background: beige;
            padding: 4px;
            font-size: 12pt;
            font-weight: bold;
            color: black;
            text-align: center;
            -moz-border-radius: 10px;
        }

        .red {
            background: red;
        }

        .bold {
            font-weight: bold;
        }
    </style>
</head><!--/head -->

<html lang="en-us">
<body>
<div id="tab-container" class="container-fluid">
    <ul class="nav nav-tabs" id="tabs">
        <li id="example-9-tab">
            <a href="#example-9" data-toggle="tab">Example 9</a>
        </li>
    </ul>
    <!--/#tabs -->
    <div class="tab-content">
        <div class="tab-pane" id="example-9">
            <div class="row-fluid">
                <div id="example-9-table" class="span7"></div>
                <div class="span5">
                    <h3 class="text-center">Overview</h3>
                    <hr/>
                    <a href="https://github.com/rob-white/SlimGrid/blob/master/SlimGrid/examples/example-9.htm">Source Code on Github</a>
                    <hr/>
                    <ul>
                        <li>Move and drag to recycle bin</li>
                        <li><a href="http://mleibman.github.io/SlickGrid/examples/example9-row-reordering.html">SlickGrid example that was used as a reference</a></li>
                    </ul>
                    <hr/>
                    <div id="dropzone" class="recycle-bin">
                        Recycle Bin
                    </div>
                </div>
            </div>
        </div>
        <!--/#example-9 -->
    </div>
    <!--/.tab-content -->
</div>
<!--/.tab-content -->

<!-- jQuery scripts -->
<script src="../js/jquery/jquery-1.9.1.js?v=1.0" type="text/javascript"></script>
<script src="../js/jquery/jquery-ui-1.10.3.custom.min.js?v=1.0" type="text/javascript"></script>
<script src="../js/jquery/jquery.event.drop-2.2.js?v=1.0" type="text/javascript"></script>
<script src="../js/jquery/jquery.event.drag-2.2.js?v=1.0" type="text/javascript"></script>

<!-- Bootstrap scripts -->
<script src="../js/bootstrap/bootstrap.min.js?v=1.0" type="text/javascript"></script>

<!-- Slickgrid scripts -->
<script src="../js/slickgrid/slick.core.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.grid.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.formatters.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.dataview.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.pager.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.groupitemmetadataprovider.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.cellrangedecorator.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.cellrangeselector.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.cellselectionmodel.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.rowselectionmodel.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.rowmovemanager.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.columnpicker.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slickgrid.headerfilter.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.cellexternalcopymanager.js?v=1.0" type="text/javascript"></script>
<script src="../js/slickgrid/slick.editors.js?v=1.0" type="text/javascript"></script>

<!-- SlimGrid dependency (will be removed in future update)-->
<script src="../js/underscore/underscore.js?v=1.0" type="text/javascript"></script>

<!-- SlimGrid wrapper for SlickGrid creation -->
<script src="../slim.grid.js?v=1.0" type="text/javascript"></script>

<script type="text/javascript">
    // Example 9
    $(document).ready(function () {
        // When jQuery's ready, initialize the example and show the tab
        var example = Example().init().show();

        $(window).on('resize', function(){
           example.resize();
        });
    });

    function Example() {
        // Reference elements with jQuery
        var $el = {
            tab: $('#example-9-tab a'),
            gridContainer: $('#example-9-table')
        },
        gridHeight = 400,	// Set the height we want to use
        grid = SlimGrid();	// Create a base SlimGrid

        // Constructor
        function page() { }

        // ----- Public functions -----
        page.init = function () {
            // Create example data
            var data = generateDummyData();

            // Create a SlimGrid (SlickGrid) with options and formatting
            grid.container($el.gridContainer)	    // The container element of the grid (a jQuery element)
                .gridOptions({
                    // -- SlickGrid --
                    editable: true,
                    autoEdit: false,
                    defaultColumnWidth: 60,
                    enableAddRow: true,
                    forceFitColumns: true,
                    multiSelect: true,
                    enableCellNavigation: true,

                    // -- SlimGrid --
                    height: gridHeight,             // The height of the grid
                    autoIncrement: true,            // If we don't have a unique key, SlimGrid can auto-generate one
                    copyOut: false,                 // Allow user to copy out data with ctrl-c
                    downloadable: true,             // Download data (csv) link provided at bottom of grid
                    showColumnPicker: false,        // Don't use column filter plugin on right-click of column headers
                    showHeaderFilter: true,         // Filter plugin added to column headers
                    showPagerStats: false
                })
                .columnOptions(function (key, column) {

                    if(key == 'id'){
                        column['hidden'] = false;
                        column['name'] = '';
                        column['order'] = 0;
                        column['behavior'] = 'selectAndMove';
                        column['selectable'] = false;
                        column['resizable'] = false;
                        column['formatter'] = function (row, cell, value, columnDef, dataContext) {
                            return '';
                        };
                        column['cssClass'] = 'cell-reorder dnd';
                    }

                    if(key == 'name'){
                        column['width'] = 500;
                        column['order'] = 1;
                        column['cssClass'] = 'cell-title';
                        column['editor'] = Slick.Editors.Text;
                    }

                    if(key == 'complete'){
                        column['order'] = 2;
                        column['cssClass'] = 'cell-effort-driven';
                        column['cannotTriggerInsert'] = true;
                        column['formatter'] = Slick.Formatters.Checkmark;
                        column['editor'] = Slick.Editors.Checkbox;
                    }

                    return column;
                })
                .plugins(function (gridview) {
                    var dataview = this.dataview(),
                            data = this.getData();

                    var moveRowsPlugin = new Slick.RowMoveManager({
                        cancelEditOnDrag: true
                    });

                    moveRowsPlugin.onBeforeMoveRows.subscribe(function (e, data) {
                        for (var i = 0; i < data.rows.length; i++) {
                            // no point in moving before or after itself
                            if (data.rows[i] == data.insertBefore || data.rows[i] == data.insertBefore - 1) {
                                e.stopPropagation();
                                return false;
                            }
                        }
                        return true;
                    });

                    moveRowsPlugin.onMoveRows.subscribe(function (e, args) {
                        var data = grid.getData();
                        var extractedRows = [], left, right;
                        var rows = args.rows;
                        var insertBefore = args.insertBefore;

                        left = data.slice(0, insertBefore);
                        right = data.slice(insertBefore, data.length);
                        rows.sort(function(a,b) { return a-b; });

                        for (var i = 0; i < rows.length; i++) {
                            extractedRows.push(data[rows[i]]);
                        }
                        rows.reverse();

                        for (var i = 0; i < rows.length; i++) {
                            var row = rows[i];
                            if (row < insertBefore) {
                                left.splice(row, 1);
                            } else {
                                right.splice(row - insertBefore, 1);
                            }
                        }

                        data = left.concat(extractedRows.concat(right));
                        var selectedRows = [];
                        for (var i = 0; i < rows.length; i++)
                            selectedRows.push(left.length + i);

                        gridview.resetActiveCell();
                        grid.render(data);
                        gridview.setSelectedRows(selectedRows);
                    });

                    gridview.registerPlugin(moveRowsPlugin);
                })
                .events(function (events) {
                    events.onDragInit  = function(e, args) {
                        e.stopImmediatePropagation();
                    };

                    events.onDragStart = function(e, args) {
                        var gridview = this.gridview();
                        var cell = gridview.getCellFromEvent(e);

                        if (!cell) return;
                        args.row = cell.row;

                        if (!data[args.row] || Slick.GlobalEditorLock.isActive()) {
                            return;
                        }

                        e.stopImmediatePropagation();
                        args.mode = "recycle";

                        var selectedRows = gridview.getSelectedRows();
                        if (!selectedRows.length || $.inArray(args.row, selectedRows) == -1) {
                            selectedRows = [args.row];
                            gridview.setSelectedRows(selectedRows);
                        }

                        args.rows = selectedRows;
                        args.count = selectedRows.length;

                        var proxy = $("<span></span>")
                                .css({
                                    position: "absolute",
                                    display: "inline-block",
                                    padding: "4px 10px",
                                    background: "#e0e0e0",
                                    border: "1px solid gray",
                                    "z-index": 99999,
                                    "-moz-border-radius": "8px",
                                    "-moz-box-shadow": "2px 2px 6px silver"
                                })
                                .text("Drag to Recycle Bin to delete " + args.count + " selected row(s)")
                                .appendTo("body");

                        args.helper = proxy;
                        $(args.available).css("background", "pink");

                        return proxy;
                    };

                    events.onDrag = function(e, args) {
                        if (args.mode != "recycle") return;
                        args.helper.css({top: e.pageY + 5, left: e.pageX + 5});
                    };

                    events.onDragEnd = function(e, args) {
                        if (args.mode != "recycle") return;
                        args.helper.remove();
                        $(args.available).css("background", "beige");
                    };

                    events.onAddNewRow = function(e, args, row) {
                        var item = { name: "New task", complete: false };
                        $.extend(item, args.item);
                        data.push(item);
                        grid.render(data);
                    };

                    return events;
                })
                .render(data);                      // Add data to grid and render

            $.drop({mode: "mouse"});
            $("#dropzone")
                .bind("dropstart", function (e, dd) {
                    if (dd.mode != "recycle") {
                        return;
                    }
                    $(this).css("background", "yellow");
                })
                .bind("dropend", function (e, dd) {
                    if (dd.mode != "recycle") {
                        return;
                    }
                    $(dd.available).css("background", "pink");
                })
                .bind("drop", function (e, dd) {
                    var gridview = grid.gridview();
                    if (dd.mode != "recycle") {
                        return;
                    }
                    var rowsToDelete = dd.rows.sort().reverse();
                    for (var i = 0; i < rowsToDelete.length; i++) {
                        data.splice(rowsToDelete[i], 1);
                    }
                    grid.render(data);
                    gridview.setSelectedRows([]);
                });

            // When this tab is shown to the user,
            // run resize for page elements
            $el.tab.on('shown', function (e) {
                resizePageElements();
            });

            return page;
        };

        // Show the tab if it's not currently selected
        page.show = function () {
            $el.tab.tab('show');
            return page;
        };

        page.resize = function() {
            resizePageElements();
            return page;
        };

        // ----- Private functions -----
        // Create some dummy data
        function generateDummyData() {
            var data = [
                { name: "Make a list", complete: true },
                { name: "Check it twice", complete: false },
                { name: "Find out who's naughty", complete: false },
                { name: "Find out who's nice", complete: false }
            ];

            return data;
        }

        function resizePageElements() {
            // Calls SlickGrid resize
            grid.resize();
        }

        return page;
    }

</script>
</body><!--/body -->
</html><!--/html -->
